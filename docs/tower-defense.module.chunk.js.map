{"version":3,"sources":["./src/app/tower-defense/tower-defense-game/enemy-spawner.ts","./src/app/tower-defense/tower-defense-game/enemy.ts","./src/app/tower-defense/tower-defense-game/level-map.ts","./src/app/tower-defense/tower-defense-game/path-generator.ts","./src/app/tower-defense/tower-defense-game/play.scene.ts","./src/app/tower-defense/tower-defense-game/start.scene.ts","./src/app/tower-defense/tower-defense-game/tower-defense-game.component.html","./src/app/tower-defense/tower-defense-game/tower-defense-game.component.scss","./src/app/tower-defense/tower-defense-game/tower-defense-game.component.ts","./src/app/tower-defense/tower-defense-routing.module.ts","./src/app/tower-defense/tower-defense.module.ts","./src/utils/graph.ts"],"names":[],"mappings":";;;;;;;;AACuC;AAQvC;IAeE,sBAAY,OAA4B;QAdhC,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QAcnB,IAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,cAAc,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;QACpF,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;QACrC,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,iCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,6DAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,6BAAM,GAAN,UAAO,EAAU;QACf,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACnH,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,MAAM,CAAC;YACT,CAAC;YAED,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;YACnC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBACb,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBAC7D,IAAI,CAAC,KAAK,EAAE,CAAC;oBACf,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC;QACH,CAAC;IACH,CAAC;IAEO,4BAAK,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;IACvB,CAAC;IAnDM,2BAAc,GAAwB;QAC3C,IAAI,EAAE,CAAC;QACP,UAAU,EAAE,CAAC,CAAC;QACd,OAAO,EAAE,CAAC,CAAC;KACZ,CAAC;IAgDJ,mBAAC;CAAA;AA7DwB;;;;;;;;;;;;;;;;;;;;;;ACTQ;AAEjC;IAA2B,yBAAyB;IAIlD,eAAY,KAAmB,EAAU,IAAgB,EAAE,KAAa;QAAxE,YACE,kBAAM,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,SAerE;QAhBwC,UAAI,GAAJ,IAAI,CAAY;QAHjD,WAAK,GAAW,EAAE,CAAC;QACnB,QAAE,GAAW,GAAG,CAAC;QAIvB,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAI,CAAC,CAAC;QAC9B,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,EAAM,EAAE,CAAC;gBAAR,SAAC,EAAE,SAAC;YAAS,QAAC;gBAC/C,OAAO,EAAE,KAAI;gBACb,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,KAAI,CAAC,KAAK,GAAG,IAAI;gBAClH,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,KAAK;gBACb,KAAK,EAAE;oBACL,CAAC,EAAE,CAAC,GAAG,EAAE;oBACT,CAAC,EAAE,CAAC,GAAG,EAAE;iBACV;aACF,CAAC;QAT8C,CAS9C,CAAC,CAAC;QACJ,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;YACzB,MAAM;SACP,CAAC,CAAC;;IACL,CAAC;IACH,YAAC;AAAD,CAAC,CArB0B,mDAAkB,CAAC,MAAM,GAqBnD;;;;;;;;;;;;ACrBgD;AAoBjD,IAAM,YAAY,GAAY;IAC5B,cAAc,EAAE,EAAE;IAClB,eAAe,EAAE,EAAE;IACnB,iBAAiB,EAAE,CAAC;IACpB,kBAAkB,EAAE,CAAC;IACrB,cAAc,EAAE,CAAC;IACjB,eAAe,EAAE,CAAC;IAClB,iBAAiB,EAAE,EAAE;IACrB,kBAAkB,EAAE,EAAE;IACtB,GAAG,EAAE,EAAE;IACP,MAAM,EAAE,CAAC;IACT,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,EAAE;IACV,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;CACT,CAAC;AAEF,IAAM,KAAK,GAAc,EAAE,CAAC;AAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAC3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3B,IAAM,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpC,IAAM,KAAK,GAA8B,EAAE,CAAC;QAC5C,GAAG,CAAC,CAAqB,UAA4B,EAA5B,WAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAA5B,cAA4B,EAA5B,IAA4B;YAA5C,eAAY,EAAX,WAAG,EAAE,aAAK;YAClB,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;SAC7B;QACD,KAAK,CAAC,IAAI,CAAC,KAAuB,CAAC,CAAC;IACtC,CAAC;AACH,CAAC;AAED;IAOE,kBAAoB,KAAa,EAAU,MAAc,EAAU,KAAmB;QAAlE,UAAK,GAAL,KAAK,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAc;IACtF,CAAC;IAED,uBAAI,GAAJ;QAAA,iBAuEC;QAtEC,IAAM,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACrD,IAAM,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACvD,IAAM,aAAa,GAAG,IAAI,sEAAa,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAAC;QACjF,IAAM,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC,kBAAkB,GAAG,mBAAmB,CAAC,CAAC;QAE9E,IAAI,CAAC,GAAG,GAAG,KAAK,CAAW,IAAI,CAAC,MAAM,CAAC;aACpC,IAAI,CAAC,IAAI,CAAC;aACV,GAAG,CAAC,cAAM,YAAK,CAAS,KAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAjC,CAAiC,CAAC,CAAC;QAChD,GAAG,CAAC,CAAa,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;YAAhB,IAAI,IAAI;YACX,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,kBAAkB,CAAC,CAAC;YAChD,IAAM,CAAC,GAAG,IAAI,GAAG,kBAAkB,CAAC;YACpC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7B,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC;SACF;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAM,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,kBAAkB,CAAC,CAAC;QAClE,IAAM,UAAU,GAAG,CAAC,GAAG,CAAC,SAAS,GAAG,kBAAkB,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC;QACD,EAAE,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;QAC/E,CAAC;QACD,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACtC,IAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,kBAAkB,CAAC,CAAC;QAC9D,IAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,OAAO,GAAG,kBAAkB,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7E,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;QACrE,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7E,CAAC;QAEK,6BAAuC,EAAtC,cAAM,EAAE,cAAM,CAAyB;QAC9C,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QACjC,IAAI,SAAS,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QAC7C,GAAG,CAAC,CAAa,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;YAAhB,IAAI,IAAI;YACX,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxD,IAAM,CAAC,GAAG,IAAI,GAAG,kBAAkB,GAAG,CAAC,GAAG,CAAC,CAAC;YAC5C,IAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;YAC7B,SAAS,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,yBAAM,GAAN;QACE,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAChE,IAAM,IAAI,GAAe,EAAE,CAAC;QAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,IAAM,GAAG,GAAG,EAAE,CAAC;YACf,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5C,IAAI,WAAW,SAAQ,CAAC;gBACxB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnB,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7C,IAAM,KAAK,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrE,IAAM,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACrE,IAAM,OAAO,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACjH,IAAM,QAAQ,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5G,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACV,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACX,WAAW,GAAG,OAAO,CAAC,cAAc,CAAC;wBACvC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACnB,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;wBACxC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC;wBAC5B,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACpB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACX,WAAW,GAAG,OAAO,CAAC,iBAAiB,CAAC;wBAC1C,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACnB,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAC;wBAC3C,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;wBAC/B,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBAClB,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACnB,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC9B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC9C,WAAW,GAAG,OAAO,CAAC,cAAc,CAAC;wBACvC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1E,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;wBACxC,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BACvE,WAAW,GAAG,OAAO,CAAC,iBAAiB,CAAC;wBAC1C,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC5F,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAC;wBAC3C,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;wBAC/B,CAAC;oBACH,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;gBAC7B,CAAC;gBACD,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxB,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC;QAED,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YAClC,IAAI;YACJ,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,EAAE;SACf,CAAC,CAAC;QACH,IAAM,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QACjD,IAAM,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,gCAAa,GAAb;QACQ,2BAA6C,EAA5C,kBAAU,EAAE,kBAAU,CAAuB;QAEpD,EAAE,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,CAAC,UAAU,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,CAAC,UAAU,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,CAAC,UAAU,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,CAAC,UAAU,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAED,+BAAY,GAAZ,UAAa,CAAS,EAAE,CAAS;QAC/B,IAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACjC,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACtE,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,+BAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,+BAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAEO,iCAAc,GAAtB,UAAuB,CAAS,EAAE,CAAS;QACzC,IAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAAC;QACjF,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC7E,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACH,eAAC;AAAD,CAAC;;;;;;;;;;;;AChP4C;AAE7C;IACE,uBAAoB,KAAa,EAAU,MAAc;QAArC,UAAK,GAAL,KAAK,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAQ;IACzD,CAAC;IAED,gCAAQ,GAAR,UAAS,QAA6B;QAA7B,sCAAmB,IAAI,CAAC,KAAK;QACpC,IAAM,KAAK,GAAG,IAAI,2DAAK,EAAE,CAAC;QAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;QACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACxB,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC9D,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvB,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC9D,CAAC;YACH,CAAC;QACH,CAAC;QAED,IAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,MAAc,CAAC;QACnB,IAAI,MAAc,CAAC;QACnB,IAAI,IAAY,CAAC;QACjB,IAAI,IAAY,CAAC;QACjB,IAAI,IAAc,CAAC;QACnB,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,GAAG,CAAC;YACF,EAAE,CAAC,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC;gBACpB,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACxB,UAAU,GAAG,CAAC,CAAC;YACjB,CAAC;YACD,GAAG,CAAC;gBACF,gCAA8C,EAA7C,cAAM,EAAE,cAAM,CAAgC;gBAC/C,gCAA0C,EAAzC,YAAI,EAAE,YAAI,CAAgC;YAC7C,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE;YAChE,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;YAC3E,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpB,UAAU,IAAI,CAAC,CAAC;QAClB,CAAC,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE;QAEjC,MAAM,CAAC,IAAI,CAAC;;IACd,CAAC;IAED,4CAAoB,GAApB;QACE,IAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;QAC/C,IAAI,CAAS,CAAC;QACd,IAAI,CAAS,CAAC;QACd,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACvB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACrD,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC7C,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACxD,CAAC;QACD,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC;IAED,gCAAQ,GAAR,UAAS,IAAc;QACrB,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,OAAO,WAAW,EAAE,CAAC;YACnB,WAAW,GAAG,KAAK,CAAC;YACpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzC,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACzC,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC5C,IAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;oBAChC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC7C,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;wBAC9B,WAAW,GAAG,IAAI,CAAC;wBACnB,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;gBACD,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;oBAChB,KAAK,CAAC;gBACR,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFgC;AAGM;AACP;AACe;AAE/C;IAA+B,6BAAY;IAKzC;eACE,kBAAM,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC;IAC7B,CAAC;IAED,wBAAI,GAAJ;QACE,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;QAC5C,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,4DAAQ,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,oEAAY,CAAC;YACnC,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC;IAED,2BAAO,GAAP;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,CACnB,aAAa,EACb,8CAA8C,EAC9C,EAAE,UAAU,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CACpC,CAAC;IACJ,CAAC;IAED,0BAAM,GAAN;QAAA,iBAQC;QAPC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YAC3D,IAAI,qDAAK,CAAC,KAAI,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,GAAG,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QACG,qCAA6C,EAA5C,aAAK,EAAE,aAAK,CAAiC;QACpD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,cAAM,YAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAApB,CAAoB,CAAC,CAAC;IAC7D,CAAC;IAED,0BAAM,GAAN,UAAO,CAAS,EAAE,EAAU;QAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,2BAAO,GAAP;QACE,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAChC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAClC,CAAC;IACH,CAAC;IACH,gBAAC;AAAD,CAAC,CA/C8B,6CAAY,GA+C1C;;;;;;;;;;;;;;;;;;;;;;;ACtDgC;AAEjC;IAAgC,8BAAY;IAC1C;eACE,kBAAM,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC;IAC9B,CAAC;IAED,4BAAO,GAAP;IACA,CAAC;IAED,2BAAM,GAAN;QAAA,iBAKC;QAJC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACzE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE;YAC3B,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IACH,iBAAC;AAAD,CAAC,CAd+B,6CAAY,GAc3C;;;;;;;;;AChBD,sK;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;ACA0C;AAEC;AACF;AAMzC;IAJA;QAKE,WAAM,GAAQ;YACZ,KAAK,EAAE,eAAe;YACtB,GAAG,EAAE,mDAAmD;YACxD,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,CAAC;YACP,KAAK,EAAE;gBACL,gEAAU;gBACV,8DAAS;aACV;SACF,CAAC;QACF,iBAAY,GAAW,kDAAkD,CAAC;IAC5E,CAAC;IAhBY,yBAAyB;QAJrC,wEAAS,CAAC;;;SAGV,CAAC;OACW,yBAAyB,CAgBrC;IAAD,gCAAC;CAAA;AAhBqC;;;;;;;;;;;;;;;;;;;ACTG;AACc;AAEuC;AAE9F,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mHAAyB,EAAE;CACnD,CAAC;AAUF;IAAA;IACA,CAAC;IADY,yBAAyB;QARrC,uEAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,OAAO,EAAE;gBACP,qEAAY;aACb;SACF,CAAC;OACW,yBAAyB,CACrC;IAAD,gCAAC;CAAA;AADqC;;;;;;;;;;;;;;;;;;;;;;ACjBE;AACO;AAE+C;AACnB;AACN;AAarE;IAAA;IACA,CAAC;IADY,kBAAkB;QAX9B,uEAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY;gBAEZ,yFAAgB;gBAChB,gGAAyB;aAC1B;YACD,YAAY,EAAE;gBACZ,mHAAyB;aAC1B;SACF,CAAC;OACW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B;;;;;;;;;;;ACVuB;AAEtD;;GAEG;AACH;IAAA;QACU,aAAQ,GAAc,EAAE,CAAC;QACzB,UAAK,GAAU,EAAE,CAAC;IAoJ5B,CAAC;IAlJC;;OAEG;IACH,yBAAS,GAAT,UAAU,MAAS;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,IAAI,KAAK,CAAC,4BAA0B,MAAQ,CAAC,CAAC;QACtD,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,uBAAO,GAAP,UAAQ,OAAU,EAAE,OAAU;QAC5B,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,+BAA6B,OAAS,CAAC,CAAC;QAC1D,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,IAAI,KAAK,CAAC,qBAAmB,OAAS,CAAC,CAAC;QAChD,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YACtD,MAAM,IAAI,KAAK,CAAC,qBAAmB,OAAS,CAAC,CAAC;QAChD,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YACtE,MAAM,IAAI,KAAK,CAAC,0BAAwB,OAAO,WAAM,OAAS,CAAC,CAAC;QAClE,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YACtE,MAAM,IAAI,KAAK,CAAC,0BAAwB,OAAO,WAAM,OAAS,CAAC,CAAC;QAClE,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC;QAC1D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC;IAC5D,CAAC;IAED,2BAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,wBAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED;;;;;;;;;;OAUG;IACH,wBAAQ,GAAR;QACE,IAAM,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC;QACzB,IAAM,WAAW,GAAQ,EAAE,CAAC;QAC5B,IAAM,aAAa,GAAc,EAAE,CAAC;QACpC,IAAM,cAAc,GAAc,EAAE,CAAC;QACrC,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;QACnD,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC;QACzD,IAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;QAC7D,WAAW,CAAC,IAAI,CAAC,CAAC,YAAiB,CAAC,CAAC;QACrC,aAAa,CAAC,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QACpC,cAAc,CAAC,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;QAC9B,OAAO,WAAW,CAAC,MAAM,EAAE,CAAC;YAC1B,IAAI,oBAAoB,GAAG,KAAK,CAAC;YACjC,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YACzF,IAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;YAClC,IAAM,UAAU,GAAG,mFAAyB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YACvF,GAAG,CAAC,CAAkB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;gBAA3B,IAAI,SAAS;gBAChB,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBACzD,oBAAoB,GAAG,IAAI,CAAC;oBAC5B,WAAW,CAAC,IAAI,CAAC,CAAC,SAAc,CAAC,CAAC;oBAClC,aAAa,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;oBACjC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;oBAClC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC;oBAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC;oBAChC,KAAK,CAAC;gBACR,CAAC;aACF;YACD,EAAE,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBAC1B,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBAC/B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,sBAAM,GAAN,UAAO,KAAQ,EAAE,GAAM;QACrB,IAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,IAAM,OAAO;YACX,GAAC,KAAK,CAAC,QAAQ,EAAE,IAAG,IAAI;eACzB,CAAC;QAEF,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACxE,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,GAAG,CAAC,CAAa,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;gBAAjB,IAAI,IAAI;gBACX,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,IAAS,CAAC,CAAC;oBACtB,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC;oBAChC,OAAO,GAAG,IAAI,CAAC;oBACf,KAAK,CAAC;gBACR,CAAC;aACF;YACD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,GAAG,EAAE,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC;YACR,CAAC;QACH,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;;IACd,CAAC;IAED,qBAAK,GAAL,UAAM,KAAa,EAAE,MAAc;QACjC,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;QAC/D,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAChC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/B,IAAM,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;gBACxB,GAAG,IAAI,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBACjF,GAAG,IAAI,GAAG,CAAC;gBACb,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,GAAG,IAAI,GAAG,CAAC;gBACb,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpE,OAAO,IAAI,IAAI,CAAC;oBAClB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,IAAI,IAAI,CAAC;oBAClB,CAAC;gBACH,CAAC;YACH,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC1B,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IACH,YAAC;AAAD,CAAC","file":"tower-defense.module.chunk.js","sourcesContent":["import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nexport interface EnemySpawnerOptions {\n  rate?: number;\n  maxEnemies?: number;\n  maxTime?: number;\n}\n\nexport class EnemySpawner {\n  private numEnemies = 0;\n  private ellapsed = 0;\n  private rate: number;\n  private maxEnemies: number;\n  private maxTime: number;\n  private subject: Subject<any>;\n  private rng: Phaser.Math.RandomDataGenerator;\n\n  static defaultOptions: EnemySpawnerOptions = {\n    rate: 1,\n    maxEnemies: -1,\n    maxTime: -1,\n  };\n\n  constructor(options: EnemySpawnerOptions) {\n    const mergedOptions = Object.assign({}, EnemySpawner.defaultOptions, options || {});\n    this.rate = mergedOptions.rate;\n    this.maxEnemies = mergedOptions.maxEnemies;\n    this.maxTime = mergedOptions.maxTime;\n    this.rng = new Phaser.Math.RandomDataGenerator([Date.now().toString()]);\n  }\n\n  startSpawn(): Observable<any> {\n    this.subject = new Subject();\n    this.numEnemies = 0;\n    this.ellapsed = 0;\n\n    return this.subject.asObservable();\n  }\n\n  update(dt: number) {\n    this.ellapsed += dt;\n\n    if (this.subject) {\n      if (this.maxEnemies > 0 && this.maxEnemies <= this.numEnemies || this.maxTime > 0 && this.ellapsed >= this.maxTime) {\n        this.subject.complete();\n        this.subject = null;\n        return;\n      }\n\n      const rate = this.rate * dt / 1000;\n      if (rate > 1) {\n        const count = Math.floor(rate);\n        for (let i = 0; i < count; i++) {\n          if (this.maxEnemies < 0 || this.maxEnemies > this.numEnemies) {\n            this.spawn();\n          } else {\n            break;\n          }\n        }\n      } else if (this.rng.frac() < rate) {\n        this.spawn();\n      }\n    }\n  }\n\n  private spawn(): void {\n    this.subject.next();\n    this.numEnemies += 1;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense-game/enemy-spawner.ts","import * as Phaser from 'phaser';\n\nexport class Enemy extends Phaser.GameObjects.Sprite {\n  private speed: number = 64;\n  private hp: number = 100;\n\n  constructor(scene: Phaser.Scene, private path: number[][], frame: number) {\n    super(scene, path[0][0] * 64, path[0][1] * 64, 'spritesheet', frame);\n    this.scene.add.existing(this);\n    const tweens = path.slice(1).map(([x, y], i) => ({\n      targets: this,\n      duration: (Math.abs(path[i + 1][0] - path[i][0]) + Math.abs(path[i + 1][1] - path[i][1])) * 64 / this.speed * 1000,\n      ease: 'Linear',\n      repeat: false,\n      props: {\n        x: x * 64,\n        y: y * 64,\n      },\n    }));\n    this.scene.tweens.timeline({\n      tweens,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense-game/enemy.ts","import * as Phaser from 'phaser';\n\nimport { PathGenerator } from './path-generator';\n\nexport interface Tileset {\n  TOP_LEFT_INNER: number;\n  TOP_RIGHT_INNER: number;\n  BOTTOM_LEFT_INNER: number;\n  BOTTOM_RIGHT_INNER: number;\n  TOP_LEFT_OUTER: number;\n  TOP_RIGHT_OUTER: number;\n  BOTTOM_LEFT_OUTER: number;\n  BOTTOM_RIGHT_OUTER: number;\n  TOP: number;\n  BOTTOM: number;\n  LEFT: number;\n  RIGHT: number;\n  MIDDLE: number;\n  COIN: number;\n  SIDE: number;\n}\n\nconst TILE_OFFSETS: Tileset = {\n  TOP_LEFT_INNER: 48,\n  TOP_RIGHT_INNER: 46,\n  BOTTOM_LEFT_INNER: 2,\n  BOTTOM_RIGHT_INNER: 0,\n  TOP_LEFT_OUTER: 3,\n  TOP_RIGHT_OUTER: 4,\n  BOTTOM_LEFT_OUTER: 26,\n  BOTTOM_RIGHT_OUTER: 27,\n  TOP: 47,\n  BOTTOM: 1,\n  LEFT: 25,\n  RIGHT: 23,\n  MIDDLE: 50,\n  COIN: 49,\n  SIDE: 24,\n};\n\nconst TILES: Tileset[] = [];\nfor (let y = 0; y < 4; y++) {\n  for (let x = 0; x < 3; x++) {\n    const offset = y * (3 * 23) + x * 5;\n    const tiles: { [key: string]: number } = {};\n    for (let [key, value] of Object.entries(TILE_OFFSETS)) {\n      tiles[key] = value + offset;\n    }\n    TILES.push(tiles as any as Tileset);\n  }\n}\n\nexport class LevelMap {\n  private startNodes: number[][];\n  private endNodes: number[][];\n  private map: number[][];\n  private path: { [start: number]: number };\n  private xyPath: number[][];\n\n  constructor(private width: number, private height: number, private scene: Phaser.Scene) {\n  }\n\n  init() {\n    const pathGeneratorWidth = Math.ceil(this.width / 2);\n    const pathGeneratorHeight = Math.ceil(this.height / 2);\n    const pathGenerator = new PathGenerator(pathGeneratorWidth, pathGeneratorHeight);\n    const path = pathGenerator.generate(pathGeneratorWidth + pathGeneratorHeight);\n\n    this.map = Array<number[]>(this.height)\n      .fill(null)\n      .map(() => Array<number>(this.width).fill(0));\n    for (let node of path) {\n      const y = Math.floor(node / pathGeneratorWidth);\n      const x = node % pathGeneratorWidth;\n      if (y * 2 < this.height && x * 2 < this.width) {\n        this.map[y * 2][x * 2] = 1;\n      }\n      if (y * 2 + 1 < this.height && x * 2 < this.width) {\n        this.map[y * 2 + 1][x * 2] = 1;\n      }\n      if (y * 2 < this.height && x * 2 + 1 < this.width) {\n        this.map[y * 2][x * 2 + 1] = 1;\n      }\n      if (y * 2 + 1 < this.height && x * 2 + 1 < this.width) {\n        this.map[y * 2 + 1][x * 2 + 1] = 1;\n      }\n    }\n    const startNode = path[0];\n    const startNodeY = 2 * Math.floor(startNode / pathGeneratorWidth);\n    const startNodeX = 2 * (startNode % pathGeneratorWidth);\n    this.startNodes = [];\n    if (startNodeX === 0) {\n      this.startNodes.push([startNodeX, startNodeY], [startNodeX, startNodeY + 1]);\n    }\n    if (startNodeX === this.width - 2) {\n      this.startNodes.push([startNodeX + 1, startNodeY], [startNodeX + 1, startNodeY + 1]);\n    }\n    if (startNodeY === 0) {\n      this.startNodes.push([startNodeX, startNodeY], [startNodeX + 1, startNodeY]);\n    }\n    if (startNodeY === this.height - 2) {\n      this.startNodes.push([startNodeX, startNodeY + 1], [startNodeX + 1, startNodeY + 1]);\n    }\n\n    const endNode = path[path.length - 1];\n    const endNodeY = 2 * Math.floor(endNode / pathGeneratorWidth);\n    const endNodeX = 2 * (endNode % pathGeneratorWidth);\n    this.endNodes = [];\n    if (endNodeX === 0) {\n      this.endNodes.push([endNodeX, endNodeY], [endNodeX, endNodeY + 1]);\n    }\n    if (endNodeX === this.width - 2) {\n      this.endNodes.push([endNodeX + 1, endNodeY], [endNodeX + 1, endNodeY + 1]);\n    }\n    if (endNodeY === 0) {\n      this.endNodes.push([endNodeX, endNodeY], [endNodeX + 1, endNodeY]);\n    }\n    if (endNodeY === this.height - 2) {\n      this.endNodes.push([endNodeX, endNodeY + 1], [endNodeX + 1, endNodeY + 1]);\n    }\n\n    const [startX, startY] = this.getSpawnPoint();\n    this.path = {};\n    this.xyPath = [[startX, startY]];\n    let lastPoint = startY * this.width + startX;\n    for (let node of path) {\n      const y = Math.floor(node / pathGeneratorWidth) * 2 + 1;\n      const x = node % pathGeneratorWidth * 2 + 1;\n      const point = y * this.width + x;\n      this.path[lastPoint] = point;\n      lastPoint = point;\n      this.xyPath.push([x, y]);\n    }\n  }\n\n  create() {\n    const tileset = TILES[Math.floor(Math.random() * TILES.length)];\n    const data: number[][] = [];\n    for (let y = 0; y < this.map.length; y++) {\n      const row = [];\n      for (let x = 0; x < this.map[y].length; x++) {\n        let currentTile: number;\n        if (this.map[y][x]) {\n          const isTerminal = this.isTerminalNode(x, y);\n          const isTop = y === 0 && !isTerminal || y > 0 && !this.map[y - 1][x];\n          const isLeft = x === 0 && !isTerminal || x > 0 && !this.map[y][x - 1]\n          const isRight = x === this.map[y].length - 1 && !isTerminal || x < this.map[y].length - 1 && !this.map[y][x + 1];\n          const isBottom = y === this.map.length - 1 && !isTerminal || y < this.map.length - 1 && !this.map[y + 1][x];\n          if (isTop) {\n            if (isLeft) {\n              currentTile = tileset.TOP_LEFT_OUTER;\n            } else if (isRight) {\n              currentTile = tileset.TOP_RIGHT_OUTER;\n            } else {\n              currentTile = tileset.TOP;\n            }\n          } else if (isBottom) {\n            if (isLeft) {\n              currentTile = tileset.BOTTOM_LEFT_OUTER;\n            } else if (isRight) {\n              currentTile = tileset.BOTTOM_RIGHT_OUTER;\n            } else {\n              currentTile = tileset.BOTTOM;\n            }\n          } else if (isLeft) {\n            currentTile = tileset.LEFT;\n          } else if (isRight) {\n            currentTile = tileset.RIGHT;\n          } else {\n            if (x > 0 && y > 0 && !this.map[y - 1][x - 1]) {\n              currentTile = tileset.TOP_LEFT_INNER;\n            } else if (x < this.map[y].length - 1 && y > 0 && !this.map[y - 1][x + 1]) {\n              currentTile = tileset.TOP_RIGHT_INNER;\n            } else if (x > 0 && y < this.map.length - 1 && !this.map[y + 1][x - 1]) {\n              currentTile = tileset.BOTTOM_LEFT_INNER;\n            } else if (x < this.map[y].length - 1 && y < this.map.length - 1 && !this.map[y + 1][x + 1]) {\n              currentTile = tileset.BOTTOM_RIGHT_INNER;\n            } else {\n              currentTile = tileset.MIDDLE;\n            }\n          }\n        } else {\n          currentTile = tileset.SIDE;\n        }\n        row.push(currentTile);\n      }\n      data.push(row);\n    }\n\n    const map = this.scene.make.tilemap({\n      data,\n      tileWidth: 64,\n      tileHeight: 64,\n    });\n    const tiles = map.addTilesetImage('spritesheet');\n    const layer = map.createStaticLayer(0, tiles, 0, 0);\n  }\n\n  getSpawnPoint(): number[] {\n    const [startNodeX, startNodeY] = this.startNodes[1];\n\n    if (startNodeX === 0) {\n      return [startNodeX - 1, startNodeY];\n    } else if (startNodeX === this.width - 1) {\n      return [startNodeX + 1, startNodeY];\n    } else if (startNodeY === 0) {\n      return [startNodeX, startNodeY - 1];\n    } else {\n      return [startNodeX, startNodeY + 1];\n    }\n  }\n\n  getNextPoint(x: number, y: number): number[] {\n    const point = y * this.width + x;\n    const nextPoint = this.path[point];\n    if (typeof nextPoint === 'number') {\n      return [nextPoint % this.width, Math.floor(nextPoint / this.width)];\n    }\n    return null;\n  }\n\n  getLastPoint(): number[] {\n    return this.xyPath[this.xyPath.length - 1];\n  }\n\n  getWholePath(): number[][] {\n    return this.xyPath;\n  }\n\n  private isTerminalNode(x: number, y: number): boolean {\n    const startNode = this.startNodes.find((node) => node[0] === x && node[1] === y);\n    if (startNode) {\n      return true;\n    }\n    const endNode = this.endNodes.find((node) => node[0] === x && node[1] === y);\n    if (endNode) {\n      return true;\n    }\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense-game/level-map.ts","import { Graph } from '../../../utils/graph';\n\nexport class PathGenerator {\n  constructor(private width: number, private height: number) {\n  }\n\n  generate(minWidth: number = this.width): number[] {\n    const graph = new Graph();\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        graph.addVertex(y * this.width + x);\n      }\n    }\n    for (let y = 0; y < this.height; y++) {\n      for (let x = 0; x < this.width; x++) {\n        if (y < this.height - 1) {\n          graph.addEdge(y * this.width + x, (y + 1) * this.width + x);\n        }\n        if (x < this.width - 1) {\n          graph.addEdge(y * this.width + x, y * this.width + (x + 1));\n        }\n      }\n    }\n\n    let tree = graph.growTree();\n    let startX: number;\n    let startY: number;\n    let endX: number;\n    let endY: number;\n    let path: number[];\n    let retryCount = 0;\n\n    do {\n      if (retryCount > 10) {\n        tree = graph.growTree();\n        retryCount = 0;\n      }\n      do {\n        [startX, startY] = this.getRandomPointAtEdge();\n        [endX, endY] = this.getRandomPointAtEdge();\n      } while (Math.abs(startX - endX) + Math.abs(startY - endY) < 2);\n      path = tree.search(startY * this.width + startX, endY * this.width + endX);\n      this.shortcut(path);\n      retryCount += 1;\n    } while (path.length < minWidth);\n\n    return path;\n  }\n\n  getRandomPointAtEdge() {\n    const isAtHorizontalEdge = Math.random() < 0.5;\n    let x: number;\n    let y: number;\n    if (isAtHorizontalEdge) {\n      x = Math.floor(Math.random() * (this.width - 2)) + 1;\n      y = Math.random() < 0.5 ? 0 : this.height - 1;\n    } else {\n      x = Math.random() < 0.5 ? 0 : this.width - 1;\n      y = Math.floor(Math.random() * (this.height - 2)) + 1;\n    }\n    return [x, y];\n  }\n\n  shortcut(path: number[]): void {\n    let hasShortcut = true;\n    while (hasShortcut) {\n      hasShortcut = false;\n      for (let i = 0; i < path.length - 2; i++) {\n        const y = Math.floor(path[i] / this.width);\n        const x = path[i] % this.width;\n        for (let j = i + 2; j < path.length; j++) {\n          const y2 = Math.floor(path[j] / this.width);\n          const x2 = path[j] % this.width;\n          if (Math.abs(y - y2) + Math.abs(x - x2) <= 1) {\n            path.splice(i + 1, j - i - 1);\n            hasShortcut = true;\n            break;\n          }\n        }\n        if (hasShortcut) {\n          break;\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense-game/path-generator.ts","import * as Phaser from 'phaser';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { LevelMap } from './level-map';\nimport { Enemy } from './enemy';\nimport { EnemySpawner } from './enemy-spawner';\n\nexport class PlayScene extends Phaser.Scene {\n  private levelMap: LevelMap;\n  private enemySpawner: EnemySpawner;\n  private subscription: Subscription;\n\n  constructor() {\n    super({ key: 'PlayScene' })\n  }\n\n  init() {\n    const mapWidth = this.sys.canvas.width / 64;\n    const mapHeight = this.sys.canvas.height / 64;\n    this.levelMap = new LevelMap(mapWidth, mapHeight, this);\n    this.levelMap.init();\n    this.enemySpawner = new EnemySpawner({\n      rate: 1,\n    });\n  }\n\n  preload() {\n    this.load.spritesheet(\n      'spritesheet',\n      'assets/tower-defense/tilesheet/tilesheet.png',\n      { frameWidth: 64, frameHeight: 64 },\n    );\n  }\n\n  create() {\n    this.levelMap.create();\n    this.subscription = this.enemySpawner.startSpawn().subscribe(() => {\n      new Enemy(this, this.levelMap.getWholePath(), 246);\n    });\n    const [lastX, lastY] = this.levelMap.getLastPoint();\n    this.add.sprite(lastX * 64, lastY * 64, 'spritesheet', 134);\n    this.input.once('pointerdown', () => this.scene.restart());\n  }\n\n  update(t: number, dt: number) {\n    this.enemySpawner.update(dt);\n  }\n\n  destroy() {\n    this.input.removeAllListeners();\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense-game/play.scene.ts","import * as Phaser from 'phaser';\n\nexport class StartScene extends Phaser.Scene {\n  constructor() {\n    super({ key: 'StartScene' })\n  }\n\n  preload() {\n  }\n\n  create() {\n    this.add.text(432, 243, 'StartScene').setColor('#ffffff').setOrigin(0.5);\n    this.input.once('pointerup', () => {\n      this.scene.start('PlayScene');\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense-game/start.scene.ts","module.exports = \"<game-phaser-game-container\\n  [config]=\\\"config\\\"\\n  [title]=\\\"config.title\\\"\\n  [instructions]=\\\"instructions\\\"\\n></game-phaser-game-container>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tower-defense/tower-defense-game/tower-defense-game.component.html\n// module id = ./src/app/tower-defense/tower-defense-game/tower-defense-game.component.html\n// module chunks = tower-defense.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tower-defense/tower-defense-game/tower-defense-game.component.scss\n// module id = ./src/app/tower-defense/tower-defense-game/tower-defense-game.component.scss\n// module chunks = tower-defense.module","import { Component } from '@angular/core';\n\nimport { StartScene } from './start.scene';\nimport { PlayScene } from './play.scene';\n\n@Component({\n  templateUrl: './tower-defense-game.component.html',\n  styleUrls: ['./tower-defense-game.component.scss'],\n})\nexport class TowerDefenseGameComponent {\n  config: any = {\n    title: 'Tower Defense',\n    url: 'https://ksmai.github.io/html5-games/tower-defense',\n    version: '1.0',\n    pixelArt: false,\n    antialias: true,\n    width: 1024,\n    height: 640,\n    zoom: 1,\n    scene: [\n      StartScene,\n      PlayScene,\n    ],\n  };\n  instructions: string = `Kill all the enemies before they touch the star!`;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense-game/tower-defense-game.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TowerDefenseGameComponent } from './tower-defense-game/tower-defense-game.component';\n\nconst routes: Routes = [\n  { path: '', component: TowerDefenseGameComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [\n    RouterModule,\n  ],\n})\nexport class TowerDefenseRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense-routing.module.ts","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common';\n\nimport { TowerDefenseGameComponent } from './tower-defense-game/tower-defense-game.component';\nimport { TowerDefenseRoutingModule } from './tower-defense-routing.module';\nimport { PhaserGameModule } from '../phaser-game/phaser-game.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    PhaserGameModule,\n    TowerDefenseRoutingModule,\n  ],\n  declarations: [\n    TowerDefenseGameComponent,\n  ],\n})\nexport class TowerDefenseModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/tower-defense/tower-defense.module.ts","type VertexMap = {\n  [key: number]: any;\n};\n\ntype Edges = {\n  [key: number]: VertexMap;\n};\n\nimport { inPlaceFisherYatesShuffle } from './shuffle';\n\n/**\n * Simple undirected graph with no self loop\n */\nexport class Graph<T extends number> {\n  private vertices: VertexMap = {};\n  private edges: Edges = {};\n\n  /**\n   * Add a new vertex\n   */\n  addVertex(vertex: T): void {\n    if (this.vertices.hasOwnProperty(vertex.toString())) {\n      throw new Error(`Vertex already exists: ${vertex}`);\n    }\n    this.vertices[vertex.toString()] = true;\n    this.edges[vertex.toString()] = {};\n  }\n\n  /**\n   * Add a new edge between two existing vertices\n   */\n  addEdge(vertex1: T, vertex2: T) {\n    if (vertex1 === vertex2) {\n      throw new Error(`Self loop is not allowed: ${vertex1}`);\n    }\n    if (!this.vertices.hasOwnProperty(vertex1.toString())) {\n      throw new Error(`Unknown vertex: ${vertex1}`);\n    }\n    if (!this.vertices.hasOwnProperty(vertex2.toString())) {\n      throw new Error(`Unknown vertex: ${vertex2}`);\n    }\n    if (this.edges[vertex1.toString()].hasOwnProperty(vertex2.toString())) {\n      throw new Error(`Edge already exists: ${vertex1} - ${vertex2}`);\n    }\n    if (this.edges[vertex2.toString()].hasOwnProperty(vertex1.toString())) {\n      throw new Error(`Edge already exists: ${vertex2} - ${vertex1}`);\n    }\n    this.edges[vertex1.toString()][vertex2.toString()] = true;\n    this.edges[vertex2.toString()][vertex1.toString()] = true;\n  }\n\n  getVertices(): VertexMap {\n    return this.vertices;\n  }\n\n  getEdges(): Edges {\n    return this.edges;\n  }\n\n  /**\n   * Get a spanning tree from the graph\n   * The algorithm starts from a random vertex and\n   * add the vertex to both the visited set and the active set\n   * at each iteration, choose either a random node between or \n   * the oldest node in the active set, and visit a random unvisited\n   * neighbour of that node\n   * if the chosen node has no unvisited neighbour, it will get removed\n   * from the active set\n   * The process repeats until there are no more nodes in the active set\n   */\n  growTree() {\n    const tree = new Graph();\n    const activeNodes: T[] = [];\n    const activeNodeSet: VertexMap = {};\n    const visitedNodeSet: VertexMap = {};\n    const numNodes = Object.keys(this.vertices).length;\n    const randomIndex = Math.floor(Math.random() * numNodes);\n    const startingNode = Object.keys(this.vertices)[randomIndex];\n    activeNodes.push(+startingNode as T);\n    activeNodeSet[+startingNode] = true;\n    visitedNodeSet[+startingNode] = true;\n    tree.addVertex(+startingNode);\n    while (activeNodes.length) {\n      let hasUnvisitedNeighbor = false;\n      const nodeIdx = Math.random() < 0.5 ? 0 : Math.floor(Math.random() * activeNodes.length);\n      const node = activeNodes[nodeIdx];\n      const neighbours = inPlaceFisherYatesShuffle(Object.keys(this.edges[node.toString()]));\n      for (let neighbour of neighbours) {\n        if (!visitedNodeSet.hasOwnProperty(neighbour.toString())) {\n          hasUnvisitedNeighbor = true;\n          activeNodes.push(+neighbour as T);\n          activeNodeSet[+neighbour] = true;\n          visitedNodeSet[+neighbour] = true;\n          tree.addVertex(+neighbour);\n          tree.addEdge(+node, +neighbour);\n          break;\n        }\n      }\n      if (!hasUnvisitedNeighbor) {\n        activeNodes.splice(nodeIdx, 1);\n        delete activeNodeSet[+node];\n      }\n    }\n\n    return tree;\n  }\n\n  /**\n   * Search a path between two vertices by DFS\n   */\n  search(start: T, end: T): T[] {\n    const path = [start];\n    const visited: VertexMap = {\n      [start.toString()]: true,\n    };\n\n    while (path.length) {\n      const nodes = Object.keys(this.edges[path[path.length - 1].toString()]);\n      let hasMove = false;\n      for (let node of nodes) {\n        if (!visited[node.toString()]) {\n          path.push(+node as T);\n          visited[node.toString()] = true;\n          hasMove = true;\n          break;\n        }\n      }\n      if (!hasMove) {\n        path.pop();\n      } else if (path[path.length - 1] === end) {\n        break;\n      }\n    }\n\n    return path;\n  }\n\n  debug(width: number, height: number) {\n    const vertices = Object.keys(this.vertices).map(Number).sort();\n    const rows = [];\n    for (let y = 0; y < height; y++) {\n      let row = '';\n      let nextRow = '';\n      for (let x = 0; x < width; x++) {\n        const n = y * width + x;\n        row += 0;\n        if (x < width - 1 && this.edges[n.toString()].hasOwnProperty((n + 1).toString())) {\n          row += '-';\n        } else {\n          row += ' ';\n        }\n        if (y < height - 1) {\n          if (this.edges[n.toString()].hasOwnProperty((n + width).toString())) {\n            nextRow += '| ';\n          } else {\n            nextRow += '  ';\n          }\n        }\n      }\n      rows.push(row, nextRow);\n    }\n    console.log(rows.join('\\n'));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/graph.ts"],"sourceRoot":"webpack:///"}